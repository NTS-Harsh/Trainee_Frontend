{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n  userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\n  loading: false,\n  error: null,\n  user: {},\n  success: false\n};\n\n// Async thunks\nexport const login = createAsyncThunk('user/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response && error.response.data.message ? error.response.data.message : error.message);\n  }\n});\nexport const register = createAsyncThunk('user/register', async ({\n  name,\n  email,\n  password,\n  department,\n  gender\n}, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password,\n      department,\n      gender\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n\n    // Log user in immediately after registration\n    dispatch(setUserInfo(data));\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response && error.response.data.message ? error.response.data.message : error.message);\n  }\n});\nexport const getUserDetails = createAsyncThunk('user/getDetails', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      userInfo\n    } = getState().user;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/profile`, config);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response && error.response.data.message ? error.response.data.message : error.message);\n  }\n});\nexport const updateUserProfile = createAsyncThunk('user/updateProfile', async (user, {\n  getState,\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const {\n      userInfo\n    } = getState().user;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n\n    // Update login state with new user info\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch(setUserInfo(data));\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response && error.response.data.message ? error.response.data.message : error.message);\n  }\n});\n\n// Create the slice\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserInfo: (state, action) => {\n      state.userInfo = action.payload;\n    },\n    logout: state => {\n      localStorage.removeItem('userInfo');\n      state.userInfo = null;\n      state.user = {};\n    },\n    resetUserDetails: state => {\n      state.user = {};\n    },\n    resetUpdateProfile: state => {\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Register\n    .addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Get user details\n    .addCase(getUserDetails.pending, state => {\n      state.loading = true;\n    }).addCase(getUserDetails.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(getUserDetails.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update profile\n    .addCase(updateUserProfile.pending, state => {\n      state.loading = true;\n    }).addCase(updateUserProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.user = action.payload;\n    }).addCase(updateUserProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\n\n// Export actions and reducer\nexport const {\n  setUserInfo,\n  logout,\n  resetUserDetails,\n  resetUpdateProfile\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","userInfo","localStorage","getItem","JSON","parse","loading","error","user","success","login","email","password","rejectWithValue","config","headers","data","post","setItem","stringify","response","message","register","name","department","gender","dispatch","setUserInfo","getUserDetails","_","getState","Authorization","token","get","updateUserProfile","put","userSlice","reducers","state","action","payload","logout","removeItem","resetUserDetails","resetUpdateProfile","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/NTS-HarshvardhanP/Desktop/Isha_Project/frontend/src/redux/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n  loading: false,\r\n  error: null,\r\n  user: {},\r\n  success: false,\r\n};\r\n\r\n// Async thunks\r\nexport const login = createAsyncThunk(\r\n  'user/login',\r\n  async ({ email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users/login',\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk(\r\n  'user/register',\r\n  async ({ name, email, password, department, gender }, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users',\r\n        { name, email, password, department, gender },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      \r\n      // Log user in immediately after registration\r\n      dispatch(setUserInfo(data));\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const getUserDetails = createAsyncThunk(\r\n  'user/getDetails',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    try {\r\n      const { userInfo } = getState().user;\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/users/profile`, config);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateUserProfile = createAsyncThunk(\r\n  'user/updateProfile',\r\n  async (user, { getState, rejectWithValue, dispatch }) => {\r\n    try {\r\n      const { userInfo } = getState().user;\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(`/api/users/profile`, user, config);\r\n      \r\n      // Update login state with new user info\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n      dispatch(setUserInfo(data));\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n// Create the slice\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUserInfo: (state, action) => {\r\n      state.userInfo = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      localStorage.removeItem('userInfo');\r\n      state.userInfo = null;\r\n      state.user = {};\r\n    },\r\n    resetUserDetails: (state) => {\r\n      state.user = {};\r\n    },\r\n    resetUpdateProfile: (state) => {\r\n      state.success = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Register\r\n      .addCase(register.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Get user details\r\n      .addCase(getUserDetails.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getUserDetails.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(getUserDetails.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Update profile\r\n      .addCase(updateUserProfile.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(updateUserProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateUserProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { setUserInfo, logout, resetUserDetails, resetUpdateProfile } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}