{"ast":null,"code":"/**\r\n * Utility functions for avatar generation\r\n */\n\n/**\r\n * Get avatar URL for realistic human portraits based on user object\r\n * @param {Object} user - User object with gender field\r\n * @returns {string} - URL to the avatar image\r\n */\nexport const getAvatarUrl = user => {\n  // If user is an ID string (for backward compatibility)\n  if (typeof user === 'string') {\n    const id = user;\n    // Use the last character of the ID to determine the avatar number (1-99)\n    const lastChar = id.charAt(id.length - 1);\n    const secondLastChar = id.charAt(id.length - 2) || '0';\n    const avatarNumber = parseInt(lastChar + secondLastChar, 16) % 99 + 1;\n\n    // For backward compatibility, determine gender from ID if not provided\n    const gender = parseInt(lastChar, 16) % 2 === 0 ? 'men' : 'women';\n\n    // Use RandomUser API for realistic human portraits\n    return `https://randomuser.me/api/portraits/${gender}/${avatarNumber % 99 + 1}.jpg`;\n  }\n\n  // If user is an object with gender field\n  if (user && user.gender) {\n    // Map gender field to RandomUser API format\n    const apiGender = user.gender === 'male' ? 'men' : 'women';\n\n    // Use the last character of the ID to determine the avatar number (1-99)\n    const lastChar = user._id.charAt(user._id.length - 1);\n    const secondLastChar = user._id.charAt(user._id.length - 2) || '0';\n    const avatarNumber = parseInt(lastChar + secondLastChar, 16) % 99 + 1;\n\n    // Use RandomUser API for realistic human portraits\n    return `https://randomuser.me/api/portraits/${apiGender}/${avatarNumber % 99 + 1}.jpg`;\n  }\n\n  // Fallback for when user object doesn't have gender or _id\n  return 'https://randomuser.me/api/portraits/lego/1.jpg';\n};","map":{"version":3,"names":["getAvatarUrl","user","id","lastChar","charAt","length","secondLastChar","avatarNumber","parseInt","gender","apiGender","_id"],"sources":["C:/Users/NTS-HarshvardhanP/Desktop/Isha_Project/frontend/src/utils/avatarUtils.js"],"sourcesContent":["/**\r\n * Utility functions for avatar generation\r\n */\r\n\r\n/**\r\n * Get avatar URL for realistic human portraits based on user object\r\n * @param {Object} user - User object with gender field\r\n * @returns {string} - URL to the avatar image\r\n */\r\nexport const getAvatarUrl = (user) => {\r\n  // If user is an ID string (for backward compatibility)\r\n  if (typeof user === 'string') {\r\n    const id = user;\r\n    // Use the last character of the ID to determine the avatar number (1-99)\r\n    const lastChar = id.charAt(id.length - 1);\r\n    const secondLastChar = id.charAt(id.length - 2) || '0';\r\n    const avatarNumber = (parseInt(lastChar + secondLastChar, 16) % 99) + 1;\r\n    \r\n    // For backward compatibility, determine gender from ID if not provided\r\n    const gender = parseInt(lastChar, 16) % 2 === 0 ? 'men' : 'women';\r\n    \r\n    // Use RandomUser API for realistic human portraits\r\n    return `https://randomuser.me/api/portraits/${gender}/${avatarNumber % 99 + 1}.jpg`;\r\n  }\r\n  \r\n  // If user is an object with gender field\r\n  if (user && user.gender) {\r\n    // Map gender field to RandomUser API format\r\n    const apiGender = user.gender === 'male' ? 'men' : 'women';\r\n    \r\n    // Use the last character of the ID to determine the avatar number (1-99)\r\n    const lastChar = user._id.charAt(user._id.length - 1);\r\n    const secondLastChar = user._id.charAt(user._id.length - 2) || '0';\r\n    const avatarNumber = (parseInt(lastChar + secondLastChar, 16) % 99) + 1;\r\n    \r\n    // Use RandomUser API for realistic human portraits\r\n    return `https://randomuser.me/api/portraits/${apiGender}/${avatarNumber % 99 + 1}.jpg`;\r\n  }\r\n  \r\n  // Fallback for when user object doesn't have gender or _id\r\n  return 'https://randomuser.me/api/portraits/lego/1.jpg';\r\n};"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAK;EACpC;EACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAMC,EAAE,GAAGD,IAAI;IACf;IACA,MAAME,QAAQ,GAAGD,EAAE,CAACE,MAAM,CAACF,EAAE,CAACG,MAAM,GAAG,CAAC,CAAC;IACzC,MAAMC,cAAc,GAAGJ,EAAE,CAACE,MAAM,CAACF,EAAE,CAACG,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG;IACtD,MAAME,YAAY,GAAIC,QAAQ,CAACL,QAAQ,GAAGG,cAAc,EAAE,EAAE,CAAC,GAAG,EAAE,GAAI,CAAC;;IAEvE;IACA,MAAMG,MAAM,GAAGD,QAAQ,CAACL,QAAQ,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO;;IAEjE;IACA,OAAO,uCAAuCM,MAAM,IAAIF,YAAY,GAAG,EAAE,GAAG,CAAC,MAAM;EACrF;;EAEA;EACA,IAAIN,IAAI,IAAIA,IAAI,CAACQ,MAAM,EAAE;IACvB;IACA,MAAMC,SAAS,GAAGT,IAAI,CAACQ,MAAM,KAAK,MAAM,GAAG,KAAK,GAAG,OAAO;;IAE1D;IACA,MAAMN,QAAQ,GAAGF,IAAI,CAACU,GAAG,CAACP,MAAM,CAACH,IAAI,CAACU,GAAG,CAACN,MAAM,GAAG,CAAC,CAAC;IACrD,MAAMC,cAAc,GAAGL,IAAI,CAACU,GAAG,CAACP,MAAM,CAACH,IAAI,CAACU,GAAG,CAACN,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG;IAClE,MAAME,YAAY,GAAIC,QAAQ,CAACL,QAAQ,GAAGG,cAAc,EAAE,EAAE,CAAC,GAAG,EAAE,GAAI,CAAC;;IAEvE;IACA,OAAO,uCAAuCI,SAAS,IAAIH,YAAY,GAAG,EAAE,GAAG,CAAC,MAAM;EACxF;;EAEA;EACA,OAAO,gDAAgD;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}