{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport userReducer from './slices/userSlice';\nimport traineeReducer from './slices/traineeSlice';\nimport rootSaga from './sagas/rootSaga';\n\n// Create saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// Configure store with Redux Toolkit\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n    trainee: traineeReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: true,\n    // Enable thunk for now\n    serializableCheck: false // Disable serializable check for development\n  }).concat(sagaMiddleware),\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\n// Run saga middleware with root saga\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","userReducer","traineeReducer","rootSaga","sagaMiddleware","store","reducer","user","trainee","middleware","getDefaultMiddleware","thunk","serializableCheck","concat","devTools","process","env","NODE_ENV","run"],"sources":["C:/Users/NTS-HarshvardhanP/Desktop/Isha_Project/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport userReducer from './slices/userSlice';\r\nimport traineeReducer from './slices/traineeSlice';\r\nimport rootSaga from './sagas/rootSaga';\r\n\r\n// Create saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// Configure store with Redux Toolkit\r\nconst store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    trainee: traineeReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      thunk: true, // Enable thunk for now\r\n      serializableCheck: false, // Disable serializable check for development\r\n    }).concat(sagaMiddleware),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// Run saga middleware with root saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,CAAC,CAAC;;AAE7C;AACA,MAAMK,KAAK,GAAGN,cAAc,CAAC;EAC3BO,OAAO,EAAE;IACPC,IAAI,EAAEN,WAAW;IACjBO,OAAO,EAAEN;EACX,CAAC;EACDO,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,KAAK,EAAE,IAAI;IAAE;IACbC,iBAAiB,EAAE,KAAK,CAAE;EAC5B,CAAC,CAAC,CAACC,MAAM,CAACT,cAAc,CAAC;EAC3BU,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;;AAEF;AACAb,cAAc,CAACc,GAAG,CAACf,QAAQ,CAAC;AAE5B,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}