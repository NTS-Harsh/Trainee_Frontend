{"ast":null,"code":"// import { takeLatest, put, call, all, select } from 'redux-saga/effects';\n// import axios from 'axios';\n\n// // Action Types\n// export const TRAINEE_LIST_REQUEST = 'TRAINEE_LIST_REQUEST';\n// export const TRAINEE_LIST_SUCCESS = 'TRAINEE_LIST_SUCCESS';\n// export const TRAINEE_LIST_FAILURE = 'TRAINEE_LIST_FAILURE';\n\n// export const TRAINEE_DETAILS_REQUEST = 'TRAINEE_DETAILS_REQUEST';\n// export const TRAINEE_DETAILS_SUCCESS = 'TRAINEE_DETAILS_SUCCESS';\n// export const TRAINEE_DETAILS_FAILURE = 'TRAINEE_DETAILS_FAILURE';\n\n// export const TRAINEE_CREATE_REQUEST = 'TRAINEE_CREATE_REQUEST';\n// export const TRAINEE_CREATE_SUCCESS = 'TRAINEE_CREATE_SUCCESS';\n// export const TRAINEE_CREATE_FAILURE = 'TRAINEE_CREATE_FAILURE';\n\n// export const TRAINEE_UPDATE_REQUEST = 'TRAINEE_UPDATE_REQUEST';\n// export const TRAINEE_UPDATE_SUCCESS = 'TRAINEE_UPDATE_SUCCESS';\n// export const TRAINEE_UPDATE_FAILURE = 'TRAINEE_UPDATE_FAILURE';\n\n// export const TRAINEE_DELETE_REQUEST = 'TRAINEE_DELETE_REQUEST';\n// export const TRAINEE_DELETE_SUCCESS = 'TRAINEE_DELETE_SUCCESS';\n// export const TRAINEE_DELETE_FAILURE = 'TRAINEE_DELETE_FAILURE';\n\n// // Action Creators\n// export const listTraineesRequest = () => ({\n//   type: TRAINEE_LIST_REQUEST\n// });\n\n// export const getTraineeDetailsRequest = (id) => ({\n//   type: TRAINEE_DETAILS_REQUEST,\n//   payload: id\n// });\n\n// export const createTraineeRequest = (traineeData) => ({\n//   type: TRAINEE_CREATE_REQUEST,\n//   payload: traineeData\n// });\n\n// export const updateTraineeRequest = (traineeData) => ({\n//   type: TRAINEE_UPDATE_REQUEST,\n//   payload: traineeData\n// });\n\n// export const deleteTraineeRequest = (id) => ({\n//   type: TRAINEE_DELETE_REQUEST,\n//   payload: id\n// });\n\n// // Selectors\n// const getUserInfo = (state) => state.user.userInfo;\n\n// // Sagas\n// function* listTraineesSaga() {\n//   try {\n//     const userInfo = yield select(getUserInfo);\n\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n\n//     const { data } = yield call(axios.get, '/api/trainees', config);\n\n//     // Dispatch only the Redux Saga action\n//     yield put({ type: TRAINEE_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     yield put({\n//       type: TRAINEE_LIST_FAILURE,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// }\n\n// function* getTraineeDetailsSaga(action) {\n//   try {\n//     const userInfo = yield select(getUserInfo);\n\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n\n//     const { data } = yield call(\n//       axios.get,\n//       `/api/trainees/${action.payload}`,\n//       config\n//     );\n//     // Dispatch only the Redux Saga action\n//     yield put({ type: TRAINEE_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     yield put({\n//       type: TRAINEE_DETAILS_FAILURE,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// }\n\n// function* createTraineeSaga(action) {\n//   try {\n//     const userInfo = yield select(getUserInfo);\n\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n\n//     const { data } = yield call(\n//       axios.post,\n//       '/api/trainees',\n//       action.payload,\n//       config\n//     );\n//     // Dispatch only the Redux Saga action\n//     yield put({ type: TRAINEE_CREATE_SUCCESS, payload: data });\n//   } catch (error) {\n//     yield put({\n//       type: TRAINEE_CREATE_FAILURE,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// }\n\n// function* updateTraineeSaga(action) {\n//   try {\n//     const userInfo = yield select(getUserInfo);\n\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n\n//     const { data } = yield call(\n//       axios.put,\n//       `/api/trainees/${action.payload._id}`,\n//       action.payload,\n//       config\n//     );\n//     // Dispatch only the Redux Saga action\n//     yield put({ type: TRAINEE_UPDATE_SUCCESS, payload: data });\n//   } catch (error) {\n//     yield put({\n//       type: TRAINEE_UPDATE_FAILURE,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// }\n\n// function* deleteTraineeSaga(action) {\n//   try {\n//     const userInfo = yield select(getUserInfo);\n\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n\n//     yield call(axios.delete, `/api/trainees/${action.payload}`, config);\n//     // Dispatch only the Redux Saga action\n//     yield put({ type: TRAINEE_DELETE_SUCCESS, payload: action.payload });\n//   } catch (error) {\n//     yield put({\n//       type: TRAINEE_DELETE_FAILURE,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// }\n\n// // Watcher Sagas\n// function* watchListTrainees() {\n//   yield takeLatest(TRAINEE_LIST_REQUEST, listTraineesSaga);\n// }\n\n// function* watchGetTraineeDetails() {\n//   yield takeLatest(TRAINEE_DETAILS_REQUEST, getTraineeDetailsSaga);\n// }\n\n// function* watchCreateTrainee() {\n//   yield takeLatest(TRAINEE_CREATE_REQUEST, createTraineeSaga);\n// }\n\n// function* watchUpdateTrainee() {\n//   yield takeLatest(TRAINEE_UPDATE_REQUEST, updateTraineeSaga);\n// }\n\n// function* watchDeleteTrainee() {\n//   yield takeLatest(TRAINEE_DELETE_REQUEST, deleteTraineeSaga);\n// }\n\n// // Root Saga\n// export function* traineeSagas() {\n//   yield all([\n//     watchListTrainees(),\n//     watchGetTraineeDetails(),\n//     watchCreateTrainee(),\n//     watchUpdateTrainee(),\n//     watchDeleteTrainee(),\n//   ]);\n// }","map":{"version":3,"names":[],"sources":["C:/Users/NTS-HarshvardhanP/Desktop/Isha_Project/frontend/src/redux/sagas/traineeSagas.js"],"sourcesContent":["// import { takeLatest, put, call, all, select } from 'redux-saga/effects';\r\n// import axios from 'axios';\r\n\r\n// // Action Types\r\n// export const TRAINEE_LIST_REQUEST = 'TRAINEE_LIST_REQUEST';\r\n// export const TRAINEE_LIST_SUCCESS = 'TRAINEE_LIST_SUCCESS';\r\n// export const TRAINEE_LIST_FAILURE = 'TRAINEE_LIST_FAILURE';\r\n\r\n// export const TRAINEE_DETAILS_REQUEST = 'TRAINEE_DETAILS_REQUEST';\r\n// export const TRAINEE_DETAILS_SUCCESS = 'TRAINEE_DETAILS_SUCCESS';\r\n// export const TRAINEE_DETAILS_FAILURE = 'TRAINEE_DETAILS_FAILURE';\r\n\r\n// export const TRAINEE_CREATE_REQUEST = 'TRAINEE_CREATE_REQUEST';\r\n// export const TRAINEE_CREATE_SUCCESS = 'TRAINEE_CREATE_SUCCESS';\r\n// export const TRAINEE_CREATE_FAILURE = 'TRAINEE_CREATE_FAILURE';\r\n\r\n// export const TRAINEE_UPDATE_REQUEST = 'TRAINEE_UPDATE_REQUEST';\r\n// export const TRAINEE_UPDATE_SUCCESS = 'TRAINEE_UPDATE_SUCCESS';\r\n// export const TRAINEE_UPDATE_FAILURE = 'TRAINEE_UPDATE_FAILURE';\r\n\r\n// export const TRAINEE_DELETE_REQUEST = 'TRAINEE_DELETE_REQUEST';\r\n// export const TRAINEE_DELETE_SUCCESS = 'TRAINEE_DELETE_SUCCESS';\r\n// export const TRAINEE_DELETE_FAILURE = 'TRAINEE_DELETE_FAILURE';\r\n\r\n// // Action Creators\r\n// export const listTraineesRequest = () => ({\r\n//   type: TRAINEE_LIST_REQUEST\r\n// });\r\n\r\n// export const getTraineeDetailsRequest = (id) => ({\r\n//   type: TRAINEE_DETAILS_REQUEST,\r\n//   payload: id\r\n// });\r\n\r\n// export const createTraineeRequest = (traineeData) => ({\r\n//   type: TRAINEE_CREATE_REQUEST,\r\n//   payload: traineeData\r\n// });\r\n\r\n// export const updateTraineeRequest = (traineeData) => ({\r\n//   type: TRAINEE_UPDATE_REQUEST,\r\n//   payload: traineeData\r\n// });\r\n\r\n// export const deleteTraineeRequest = (id) => ({\r\n//   type: TRAINEE_DELETE_REQUEST,\r\n//   payload: id\r\n// });\r\n\r\n// // Selectors\r\n// const getUserInfo = (state) => state.user.userInfo;\r\n\r\n// // Sagas\r\n// function* listTraineesSaga() {\r\n//   try {\r\n//     const userInfo = yield select(getUserInfo);\r\n    \r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = yield call(axios.get, '/api/trainees', config);\r\n    \r\n//     // Dispatch only the Redux Saga action\r\n//     yield put({ type: TRAINEE_LIST_SUCCESS, payload: data });\r\n//   } catch (error) {\r\n//     yield put({\r\n//       type: TRAINEE_LIST_FAILURE,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// }\r\n\r\n// function* getTraineeDetailsSaga(action) {\r\n//   try {\r\n//     const userInfo = yield select(getUserInfo);\r\n    \r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = yield call(\r\n//       axios.get,\r\n//       `/api/trainees/${action.payload}`,\r\n//       config\r\n//     );\r\n//     // Dispatch only the Redux Saga action\r\n//     yield put({ type: TRAINEE_DETAILS_SUCCESS, payload: data });\r\n//   } catch (error) {\r\n//     yield put({\r\n//       type: TRAINEE_DETAILS_FAILURE,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// }\r\n\r\n// function* createTraineeSaga(action) {\r\n//   try {\r\n//     const userInfo = yield select(getUserInfo);\r\n    \r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = yield call(\r\n//       axios.post,\r\n//       '/api/trainees',\r\n//       action.payload,\r\n//       config\r\n//     );\r\n//     // Dispatch only the Redux Saga action\r\n//     yield put({ type: TRAINEE_CREATE_SUCCESS, payload: data });\r\n//   } catch (error) {\r\n//     yield put({\r\n//       type: TRAINEE_CREATE_FAILURE,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// }\r\n\r\n// function* updateTraineeSaga(action) {\r\n//   try {\r\n//     const userInfo = yield select(getUserInfo);\r\n    \r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     const { data } = yield call(\r\n//       axios.put,\r\n//       `/api/trainees/${action.payload._id}`,\r\n//       action.payload,\r\n//       config\r\n//     );\r\n//     // Dispatch only the Redux Saga action\r\n//     yield put({ type: TRAINEE_UPDATE_SUCCESS, payload: data });\r\n//   } catch (error) {\r\n//     yield put({\r\n//       type: TRAINEE_UPDATE_FAILURE,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// }\r\n\r\n// function* deleteTraineeSaga(action) {\r\n//   try {\r\n//     const userInfo = yield select(getUserInfo);\r\n    \r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     yield call(axios.delete, `/api/trainees/${action.payload}`, config);\r\n//     // Dispatch only the Redux Saga action\r\n//     yield put({ type: TRAINEE_DELETE_SUCCESS, payload: action.payload });\r\n//   } catch (error) {\r\n//     yield put({\r\n//       type: TRAINEE_DELETE_FAILURE,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// }\r\n\r\n// // Watcher Sagas\r\n// function* watchListTrainees() {\r\n//   yield takeLatest(TRAINEE_LIST_REQUEST, listTraineesSaga);\r\n// }\r\n\r\n// function* watchGetTraineeDetails() {\r\n//   yield takeLatest(TRAINEE_DETAILS_REQUEST, getTraineeDetailsSaga);\r\n// }\r\n\r\n// function* watchCreateTrainee() {\r\n//   yield takeLatest(TRAINEE_CREATE_REQUEST, createTraineeSaga);\r\n// }\r\n\r\n// function* watchUpdateTrainee() {\r\n//   yield takeLatest(TRAINEE_UPDATE_REQUEST, updateTraineeSaga);\r\n// }\r\n\r\n// function* watchDeleteTrainee() {\r\n//   yield takeLatest(TRAINEE_DELETE_REQUEST, deleteTraineeSaga);\r\n// }\r\n\r\n// // Root Saga\r\n// export function* traineeSagas() {\r\n//   yield all([\r\n//     watchListTrainees(),\r\n//     watchGetTraineeDetails(),\r\n//     watchCreateTrainee(),\r\n//     watchUpdateTrainee(),\r\n//     watchDeleteTrainee(),\r\n//   ]);\r\n// }"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}