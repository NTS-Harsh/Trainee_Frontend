{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// Import saga action types\nimport { TRAINEE_LIST_REQUEST, TRAINEE_LIST_SUCCESS, TRAINEE_LIST_FAILURE, TRAINEE_DETAILS_REQUEST, TRAINEE_DETAILS_SUCCESS, TRAINEE_DETAILS_FAILURE, TRAINEE_CREATE_REQUEST, TRAINEE_CREATE_SUCCESS, TRAINEE_CREATE_FAILURE, TRAINEE_UPDATE_REQUEST, TRAINEE_UPDATE_SUCCESS, TRAINEE_UPDATE_FAILURE, TRAINEE_DELETE_REQUEST, TRAINEE_DELETE_SUCCESS, TRAINEE_DELETE_FAILURE } from '../sagas/traineeSagas';\n\n// Initial state\nconst initialState = {\n  trainees: [],\n  trainee: {},\n  loading: false,\n  error: null,\n  success: false\n};\n\n// Create the slice\nconst traineeSlice = createSlice({\n  name: 'trainee',\n  initialState,\n  reducers: {\n    resetTraineeList: state => {\n      state.trainees = [];\n    },\n    resetTraineeCreate: state => {\n      state.success = false;\n      state.trainee = {};\n      state.error = null;\n    },\n    resetTraineeUpdate: state => {\n      state.success = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Saga actions\n    // List trainees\n    .addCase(TRAINEE_LIST_REQUEST, state => {\n      state.loading = true;\n    }).addCase(TRAINEE_LIST_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.trainees = action.payload;\n    }).addCase(TRAINEE_LIST_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Get trainee details\n    .addCase(TRAINEE_DETAILS_REQUEST, state => {\n      state.loading = true;\n    }).addCase(TRAINEE_DETAILS_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.trainee = action.payload;\n    }).addCase(TRAINEE_DETAILS_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Create trainee\n    .addCase(TRAINEE_CREATE_REQUEST, state => {\n      state.loading = true;\n    }).addCase(TRAINEE_CREATE_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.trainee = action.payload;\n    }).addCase(TRAINEE_CREATE_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update trainee\n    .addCase(TRAINEE_UPDATE_REQUEST, state => {\n      state.loading = true;\n    }).addCase(TRAINEE_UPDATE_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.trainee = action.payload;\n    }).addCase(TRAINEE_UPDATE_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Delete trainee\n    .addCase(TRAINEE_DELETE_REQUEST, state => {\n      state.loading = true;\n    }).addCase(TRAINEE_DELETE_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.trainees = state.trainees.filter(trainee => trainee._id !== action.payload);\n    }).addCase(TRAINEE_DELETE_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\n\n// Export actions and reducer\nexport const {\n  resetTraineeList,\n  resetTraineeCreate,\n  resetTraineeUpdate\n} = traineeSlice.actions;\nexport default traineeSlice.reducer;","map":{"version":3,"names":["createSlice","TRAINEE_LIST_REQUEST","TRAINEE_LIST_SUCCESS","TRAINEE_LIST_FAILURE","TRAINEE_DETAILS_REQUEST","TRAINEE_DETAILS_SUCCESS","TRAINEE_DETAILS_FAILURE","TRAINEE_CREATE_REQUEST","TRAINEE_CREATE_SUCCESS","TRAINEE_CREATE_FAILURE","TRAINEE_UPDATE_REQUEST","TRAINEE_UPDATE_SUCCESS","TRAINEE_UPDATE_FAILURE","TRAINEE_DELETE_REQUEST","TRAINEE_DELETE_SUCCESS","TRAINEE_DELETE_FAILURE","initialState","trainees","trainee","loading","error","success","traineeSlice","name","reducers","resetTraineeList","state","resetTraineeCreate","resetTraineeUpdate","extraReducers","builder","addCase","action","payload","filter","_id","actions","reducer"],"sources":["C:/Users/NTS-HarshvardhanP/Desktop/Isha/Isha_Project/frontend/src/redux/slices/traineeSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n// Import saga action types\r\nimport {\r\n  TRAINEE_LIST_REQUEST,\r\n  TRAINEE_LIST_SUCCESS,\r\n  TRAINEE_LIST_FAILURE,\r\n  TRAINEE_DETAILS_REQUEST,\r\n  TRAINEE_DETAILS_SUCCESS,\r\n  TRAINEE_DETAILS_FAILURE,\r\n  TRAINEE_CREATE_REQUEST,\r\n  TRAINEE_CREATE_SUCCESS,\r\n  TRAINEE_CREATE_FAILURE,\r\n  TRAINEE_UPDATE_REQUEST,\r\n  TRAINEE_UPDATE_SUCCESS,\r\n  TRAINEE_UPDATE_FAILURE,\r\n  TRAINEE_DELETE_REQUEST,\r\n  TRAINEE_DELETE_SUCCESS,\r\n  TRAINEE_DELETE_FAILURE\r\n} from '../sagas/traineeSagas';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  trainees: [],\r\n  trainee: {},\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n};\r\n\r\n// Create the slice\r\nconst traineeSlice = createSlice({\r\n  name: 'trainee',\r\n  initialState,\r\n  reducers: {\r\n    resetTraineeList: (state) => {\r\n      state.trainees = [];\r\n    },\r\n    resetTraineeCreate: (state) => {\r\n      state.success = false;\r\n      state.trainee = {};\r\n      state.error = null;\r\n    },\r\n    resetTraineeUpdate: (state) => {\r\n      state.success = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Saga actions\r\n      // List trainees\r\n      .addCase(TRAINEE_LIST_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(TRAINEE_LIST_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.trainees = action.payload;\r\n      })\r\n      .addCase(TRAINEE_LIST_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Get trainee details\r\n      .addCase(TRAINEE_DETAILS_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(TRAINEE_DETAILS_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.trainee = action.payload;\r\n      })\r\n      .addCase(TRAINEE_DETAILS_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Create trainee\r\n      .addCase(TRAINEE_CREATE_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(TRAINEE_CREATE_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.trainee = action.payload;\r\n      })\r\n      .addCase(TRAINEE_CREATE_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Update trainee\r\n      .addCase(TRAINEE_UPDATE_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(TRAINEE_UPDATE_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.trainee = action.payload;\r\n      })\r\n      .addCase(TRAINEE_UPDATE_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Delete trainee\r\n      .addCase(TRAINEE_DELETE_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(TRAINEE_DELETE_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.trainees = state.trainees.filter(\r\n          (trainee) => trainee._id !== action.payload\r\n        );\r\n      })\r\n      .addCase(TRAINEE_DELETE_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { resetTraineeList, resetTraineeCreate, resetTraineeUpdate } = traineeSlice.actions;\r\nexport default traineeSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}