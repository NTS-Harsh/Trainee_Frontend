{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// Import saga action types\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAILURE, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAILURE, USER_LOGOUT } from '../sagas/userSagas';\n\n// Initial state\nconst initialState = {\n  userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\n  loading: false,\n  error: null,\n  user: {},\n  success: false\n};\n\n// Create the slice\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserInfo: (state, action) => {\n      state.userInfo = action.payload;\n    },\n    logout: state => {\n      localStorage.removeItem('userInfo');\n      state.userInfo = null;\n      state.user = {};\n    },\n    resetUserDetails: state => {\n      state.user = {};\n    },\n    resetUpdateProfile: state => {\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Saga actions\n    // Register\n    .addCase(USER_REGISTER_REQUEST, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(USER_REGISTER_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(USER_REGISTER_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Login\n    .addCase(USER_LOGIN_REQUEST, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(USER_LOGIN_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(USER_LOGIN_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // User details\n    .addCase(USER_DETAILS_REQUEST, state => {\n      state.loading = true;\n    }).addCase(USER_DETAILS_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(USER_DETAILS_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update profile\n    .addCase(USER_UPDATE_PROFILE_REQUEST, state => {\n      state.loading = true;\n    }).addCase(USER_UPDATE_PROFILE_SUCCESS, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.user = action.payload;\n      state.userInfo = action.payload;\n    }).addCase(USER_UPDATE_PROFILE_FAILURE, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Logout\n    .addCase(USER_LOGOUT, state => {\n      state.userInfo = null;\n      state.user = {};\n    });\n  }\n});\n\n// Export actions and reducer\nexport const {\n  setUserInfo,\n  logout,\n  resetUserDetails,\n  resetUpdateProfile\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAILURE","USER_LOGOUT","initialState","userInfo","localStorage","getItem","JSON","parse","loading","error","user","success","userSlice","name","reducers","setUserInfo","state","action","payload","logout","removeItem","resetUserDetails","resetUpdateProfile","extraReducers","builder","addCase","actions","reducer"],"sources":["C:/Users/NTS-HarshvardhanP/Desktop/Isha/Isha_Project/frontend/src/redux/slices/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n// Import saga action types\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAILURE,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAILURE,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILURE,\r\n  USER_LOGOUT\r\n} from '../sagas/userSagas';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  userInfo: localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null,\r\n  loading: false,\r\n  error: null,\r\n  user: {},\r\n  success: false,\r\n};\r\n\r\n// Create the slice\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUserInfo: (state, action) => {\r\n      state.userInfo = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      localStorage.removeItem('userInfo');\r\n      state.userInfo = null;\r\n      state.user = {};\r\n    },\r\n    resetUserDetails: (state) => {\r\n      state.user = {};\r\n    },\r\n    resetUpdateProfile: (state) => {\r\n      state.success = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Saga actions\r\n      // Register\r\n      .addCase(USER_REGISTER_REQUEST, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(USER_REGISTER_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(USER_REGISTER_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Login\r\n      .addCase(USER_LOGIN_REQUEST, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(USER_LOGIN_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(USER_LOGIN_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // User details\r\n      .addCase(USER_DETAILS_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(USER_DETAILS_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(USER_DETAILS_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Update profile\r\n      .addCase(USER_UPDATE_PROFILE_REQUEST, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(USER_UPDATE_PROFILE_SUCCESS, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.user = action.payload;\r\n        state.userInfo = action.payload;\r\n      })\r\n      .addCase(USER_UPDATE_PROFILE_FAILURE, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      \r\n      // Logout\r\n      .addCase(USER_LOGOUT, (state) => {\r\n        state.userInfo = null;\r\n        state.user = {};\r\n      });\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { setUserInfo, logout, resetUserDetails, resetUpdateProfile } = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}